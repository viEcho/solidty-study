{
	"id": "f76e36e512a7189b4a9c0237273689a6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"5w/MostSignificantBit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\n// x = 2^r + remainder\n// 求一个整数的最高位是多少 即最多是2的多少次方+remainder\ncontract MostSignificantBit{\n    function findMostSignificantBit(uint256 x) external pure returns(uint8 r){\n        if(x >= 2 ** 128){\n            x >>= 128;\n            r+= 128;\n        }\n        if(x >= 2 ** 64){\n            x >>= 64;\n            r+= 64;\n        }\n        if(x >= 2 ** 32){\n            x >>= 32;\n            r+= 32;\n        }\n        if(x >= 2 ** 16){\n            x >>= 16;\n            r+= 16;\n        }\n        if(x >= 2 ** 8){\n            x >>= 8;\n            r+= 8;\n        }\n        if(x >= 2 ** 4){\n            x >>= 4;\n            r+= 4;\n        }\n        if(x >= 2 ** 2){\n            x >>= 2;\n            r+= 2;\n        }\n        if(x >= 2 ** 1){\n            r+= 1;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"5w/MostSignificantBit.sol": {
				"MostSignificantBit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "findMostSignificantBit",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "r",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"5w/MostSignificantBit.sol\":159:868  contract MostSignificantBit{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"5w/MostSignificantBit.sol\":159:868  contract MostSignificantBit{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x483d868d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"5w/MostSignificantBit.sol\":192:866  function findMostSignificantBit(uint256 x) external pure returns(uint8 r){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"5w/MostSignificantBit.sol\":257:264  uint8 r */\n      0x00\n        /* \"5w/MostSignificantBit.sol\":283:291  2 ** 128 */\n      0x0100000000000000000000000000000000\n        /* \"5w/MostSignificantBit.sol\":278:279  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":278:291  x >= 2 ** 128 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":275:347  if(x >= 2 ** 128){... */\n      tag_11\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":312:315  128 */\n      0x80\n        /* \"5w/MostSignificantBit.sol\":306:315  x >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":333:336  128 */\n      0x80\n        /* \"5w/MostSignificantBit.sol\":329:336  r+= 128 */\n      dup2\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":275:347  if(x >= 2 ** 128){... */\n    tag_11:\n        /* \"5w/MostSignificantBit.sol\":364:371  2 ** 64 */\n      0x010000000000000000\n        /* \"5w/MostSignificantBit.sol\":359:360  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":359:371  x >= 2 ** 64 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":356:425  if(x >= 2 ** 64){... */\n      tag_14\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":392:394  64 */\n      0x40\n        /* \"5w/MostSignificantBit.sol\":386:394  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":412:414  64 */\n      0x40\n        /* \"5w/MostSignificantBit.sol\":408:414  r+= 64 */\n      dup2\n      tag_15\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_15:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":356:425  if(x >= 2 ** 64){... */\n    tag_14:\n        /* \"5w/MostSignificantBit.sol\":442:449  2 ** 32 */\n      0x0100000000\n        /* \"5w/MostSignificantBit.sol\":437:438  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":437:449  x >= 2 ** 32 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":434:503  if(x >= 2 ** 32){... */\n      tag_16\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":470:472  32 */\n      0x20\n        /* \"5w/MostSignificantBit.sol\":464:472  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":490:492  32 */\n      0x20\n        /* \"5w/MostSignificantBit.sol\":486:492  r+= 32 */\n      dup2\n      tag_17\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_17:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":434:503  if(x >= 2 ** 32){... */\n    tag_16:\n        /* \"5w/MostSignificantBit.sol\":520:527  2 ** 16 */\n      0x010000\n        /* \"5w/MostSignificantBit.sol\":515:516  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":515:527  x >= 2 ** 16 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":512:581  if(x >= 2 ** 16){... */\n      tag_18\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":548:550  16 */\n      0x10\n        /* \"5w/MostSignificantBit.sol\":542:550  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":568:570  16 */\n      0x10\n        /* \"5w/MostSignificantBit.sol\":564:570  r+= 16 */\n      dup2\n      tag_19\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_19:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":512:581  if(x >= 2 ** 16){... */\n    tag_18:\n        /* \"5w/MostSignificantBit.sol\":598:604  2 ** 8 */\n      0x0100\n        /* \"5w/MostSignificantBit.sol\":593:594  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":593:604  x >= 2 ** 8 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":590:656  if(x >= 2 ** 8){... */\n      tag_20\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":625:626  8 */\n      0x08\n        /* \"5w/MostSignificantBit.sol\":619:626  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":644:645  8 */\n      0x08\n        /* \"5w/MostSignificantBit.sol\":640:645  r+= 8 */\n      dup2\n      tag_21\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_21:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":590:656  if(x >= 2 ** 8){... */\n    tag_20:\n        /* \"5w/MostSignificantBit.sol\":673:679  2 ** 4 */\n      0x10\n        /* \"5w/MostSignificantBit.sol\":668:669  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":668:679  x >= 2 ** 4 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":665:731  if(x >= 2 ** 4){... */\n      tag_22\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":700:701  4 */\n      0x04\n        /* \"5w/MostSignificantBit.sol\":694:701  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":719:720  4 */\n      0x04\n        /* \"5w/MostSignificantBit.sol\":715:720  r+= 4 */\n      dup2\n      tag_23\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_23:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":665:731  if(x >= 2 ** 4){... */\n    tag_22:\n        /* \"5w/MostSignificantBit.sol\":748:754  2 ** 2 */\n      0x04\n        /* \"5w/MostSignificantBit.sol\":743:744  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":743:754  x >= 2 ** 2 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":740:806  if(x >= 2 ** 2){... */\n      tag_24\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":775:776  2 */\n      0x02\n        /* \"5w/MostSignificantBit.sol\":769:776  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"5w/MostSignificantBit.sol\":794:795  2 */\n      0x02\n        /* \"5w/MostSignificantBit.sol\":790:795  r+= 2 */\n      dup2\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":740:806  if(x >= 2 ** 2){... */\n    tag_24:\n        /* \"5w/MostSignificantBit.sol\":823:829  2 ** 1 */\n      0x02\n        /* \"5w/MostSignificantBit.sol\":818:819  x */\n      dup3\n        /* \"5w/MostSignificantBit.sol\":818:829  x >= 2 ** 1 */\n      lt\n        /* \"5w/MostSignificantBit.sol\":815:860  if(x >= 2 ** 1){... */\n      tag_26\n      jumpi\n        /* \"5w/MostSignificantBit.sol\":848:849  1 */\n      0x01\n        /* \"5w/MostSignificantBit.sol\":844:849  r+= 1 */\n      dup2\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      swap1\n      pop\n        /* \"5w/MostSignificantBit.sol\":815:860  if(x >= 2 ** 1){... */\n    tag_26:\n        /* \"5w/MostSignificantBit.sol\":192:866  function findMostSignificantBit(uint256 x) external pure returns(uint8 r){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_29:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_31:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_32:\n        /* \"#utility.yul\":490:514   */\n      tag_43\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_44:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_33:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_46\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_32\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_49\n      tag_29\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":766:885   */\n    tag_48:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_50\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_33\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1111   */\n    tag_34:\n        /* \"#utility.yul\":1060:1067   */\n      0x00\n        /* \"#utility.yul\":1100:1104   */\n      0xff\n        /* \"#utility.yul\":1093:1098   */\n      dup3\n        /* \"#utility.yul\":1089:1105   */\n      and\n        /* \"#utility.yul\":1078:1105   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1229   */\n    tag_35:\n        /* \"#utility.yul\":1200:1222   */\n      tag_53\n        /* \"#utility.yul\":1216:1221   */\n      dup2\n        /* \"#utility.yul\":1200:1222   */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1195:1198   */\n      dup3\n        /* \"#utility.yul\":1188:1223   */\n      mstore\n        /* \"#utility.yul\":1117:1229   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1235:1449   */\n    tag_9:\n        /* \"#utility.yul\":1324:1328   */\n      0x00\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1351:1360   */\n      dup3\n        /* \"#utility.yul\":1347:1365   */\n      add\n        /* \"#utility.yul\":1339:1365   */\n      swap1\n      pop\n        /* \"#utility.yul\":1375:1442   */\n      tag_55\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1375:1442   */\n      tag_35\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1235:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1635   */\n    tag_36:\n        /* \"#utility.yul\":1503:1580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1493:1581   */\n      mstore\n        /* \"#utility.yul\":1600:1604   */\n      0x11\n        /* \"#utility.yul\":1597:1598   */\n      0x04\n        /* \"#utility.yul\":1590:1605   */\n      mstore\n        /* \"#utility.yul\":1624:1628   */\n      0x24\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1614:1629   */\n      revert\n        /* \"#utility.yul\":1641:1829   */\n    tag_13:\n        /* \"#utility.yul\":1679:1682   */\n      0x00\n        /* \"#utility.yul\":1698:1716   */\n      tag_58\n        /* \"#utility.yul\":1714:1715   */\n      dup3\n        /* \"#utility.yul\":1698:1716   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1693:1716   */\n      swap2\n      pop\n        /* \"#utility.yul\":1730:1748   */\n      tag_59\n        /* \"#utility.yul\":1746:1747   */\n      dup4\n        /* \"#utility.yul\":1730:1748   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1725:1748   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1772   */\n      dup3\n        /* \"#utility.yul\":1768:1769   */\n      dup3\n        /* \"#utility.yul\":1764:1773   */\n      add\n        /* \"#utility.yul\":1757:1773   */\n      swap1\n      pop\n        /* \"#utility.yul\":1794:1798   */\n      0xff\n        /* \"#utility.yul\":1789:1792   */\n      dup2\n        /* \"#utility.yul\":1786:1799   */\n      gt\n        /* \"#utility.yul\":1783:1822   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1802:1820   */\n      tag_61\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1783:1822   */\n    tag_60:\n        /* \"#utility.yul\":1641:1829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220afaf4902a9b04f5ea69c92b266fe93513fda1b28ae7dfabbdcd65b061290d68364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102a08061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063483d868d1461002d575b5f80fd5b610047600480360381019061004291906101aa565b61005d565b60405161005491906101f0565b60405180910390f35b5f700100000000000000000000000000000000821061008d57608082901c915060808161008a9190610236565b90505b6801000000000000000082106100b457604082901c91506040816100b19190610236565b90505b64010000000082106100d757602082901c91506020816100d49190610236565b90505b6201000082106100f857601082901c91506010816100f59190610236565b90505b610100821061011857600882901c91506008816101159190610236565b90505b6010821061013757600482901c91506004816101349190610236565b90505b6004821061015657600282901c91506002816101539190610236565b90505b6002821061016e5760018161016b9190610236565b90505b919050565b5f80fd5b5f819050919050565b61018981610177565b8114610193575f80fd5b50565b5f813590506101a481610180565b92915050565b5f602082840312156101bf576101be610173565b5b5f6101cc84828501610196565b91505092915050565b5f60ff82169050919050565b6101ea816101d5565b82525050565b5f6020820190506102035f8301846101e1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610240826101d5565b915061024b836101d5565b9250828201905060ff81111561026457610263610209565b5b9291505056fea2646970667358221220afaf4902a9b04f5ea69c92b266fe93513fda1b28ae7dfabbdcd65b061290d68364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x8D JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xB4 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xD7 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xF8 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x137 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x156 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x16E JUMPI PUSH1 0x1 DUP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP2 EQ PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1BE PUSH2 0x173 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC DUP5 DUP3 DUP6 ADD PUSH2 0x196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x240 DUP3 PUSH2 0x1D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B DUP4 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x264 JUMPI PUSH2 0x263 PUSH2 0x209 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xAF BLOBHASH MUL 0xA9 0xB0 0x4F MCOPY 0xA6 SWAP13 SWAP3 0xB2 PUSH7 0xFE93513FDA1B28 0xAE PUSH30 0xFABBDCD65B061290D68364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "159:709:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@findMostSignificantBit_125": {
									"entryPoint": 93,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1832:1",
										"nodeType": "YulBlock",
										"src": "0:1832:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1068:43:1",
													"nodeType": "YulBlock",
													"src": "1068:43:1",
													"statements": [
														{
															"nativeSrc": "1078:27:1",
															"nodeType": "YulAssignment",
															"src": "1078:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1093:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1093:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1100:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:1"
																},
																"nativeSrc": "1089:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1089:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1078:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1078:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1025:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1050:5:1",
														"nodeType": "YulTypedName",
														"src": "1050:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1060:7:1",
														"nodeType": "YulTypedName",
														"src": "1060:7:1",
														"type": ""
													}
												],
												"src": "1025:86:1"
											},
											{
												"body": {
													"nativeSrc": "1178:51:1",
													"nodeType": "YulBlock",
													"src": "1178:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1195:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1195:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1216:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1216:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "1200:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "1200:15:1"
																		},
																		"nativeSrc": "1200:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:1"
																},
																"nativeSrc": "1188:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1188:35:1"
															},
															"nativeSrc": "1188:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "1188:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "1117:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1166:5:1",
														"nodeType": "YulTypedName",
														"src": "1166:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1173:3:1",
														"nodeType": "YulTypedName",
														"src": "1173:3:1",
														"type": ""
													}
												],
												"src": "1117:112:1"
											},
											{
												"body": {
													"nativeSrc": "1329:120:1",
													"nodeType": "YulBlock",
													"src": "1329:120:1",
													"statements": [
														{
															"nativeSrc": "1339:26:1",
															"nodeType": "YulAssignment",
															"src": "1339:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1351:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1347:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:1"
																},
																"nativeSrc": "1347:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1347:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1339:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1339:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1424:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nativeSrc": "1424:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "1375:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "1375:39:1"
																},
																"nativeSrc": "1375:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1375:67:1"
															},
															"nativeSrc": "1375:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "1375:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1235:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1301:9:1",
														"nodeType": "YulTypedName",
														"src": "1301:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1313:6:1",
														"nodeType": "YulTypedName",
														"src": "1313:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1324:4:1",
														"nodeType": "YulTypedName",
														"src": "1324:4:1",
														"type": ""
													}
												],
												"src": "1235:214:1"
											},
											{
												"body": {
													"nativeSrc": "1483:152:1",
													"nodeType": "YulBlock",
													"src": "1483:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1500:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1503:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1503:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1493:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:1"
																},
																"nativeSrc": "1493:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:88:1"
															},
															"nativeSrc": "1493:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1493:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1597:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1597:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1600:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1600:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:1"
																},
																"nativeSrc": "1590:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1590:15:1"
															},
															"nativeSrc": "1590:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1590:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1621:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1624:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1624:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1614:6:1"
																},
																"nativeSrc": "1614:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1614:15:1"
															},
															"nativeSrc": "1614:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1614:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1455:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1455:180:1"
											},
											{
												"body": {
													"nativeSrc": "1683:146:1",
													"nodeType": "YulBlock",
													"src": "1683:146:1",
													"statements": [
														{
															"nativeSrc": "1693:23:1",
															"nodeType": "YulAssignment",
															"src": "1693:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1714:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1714:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "1698:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1698:15:1"
																},
																"nativeSrc": "1698:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1698:18:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1693:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:1:1"
																}
															]
														},
														{
															"nativeSrc": "1725:23:1",
															"nodeType": "YulAssignment",
															"src": "1725:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1746:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "1730:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1730:15:1"
																},
																"nativeSrc": "1730:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1730:18:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1725:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:1:1"
																}
															]
														},
														{
															"nativeSrc": "1757:16:1",
															"nodeType": "YulAssignment",
															"src": "1757:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1768:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1768:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1771:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1771:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1764:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:1"
																},
																"nativeSrc": "1764:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1764:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:22:1",
																"nodeType": "YulBlock",
																"src": "1800:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1802:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1802:16:1"
																			},
																			"nativeSrc": "1802:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1802:18:1"
																		},
																		"nativeSrc": "1802:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "1789:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1789:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1786:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1786:2:1"
																},
																"nativeSrc": "1786:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1786:13:1"
															},
															"nativeSrc": "1783:39:1",
															"nodeType": "YulIf",
															"src": "1783:39:1"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "1641:188:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1670:1:1",
														"nodeType": "YulTypedName",
														"src": "1670:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1673:1:1",
														"nodeType": "YulTypedName",
														"src": "1673:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1641:188:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063483d868d1461002d575b5f80fd5b610047600480360381019061004291906101aa565b61005d565b60405161005491906101f0565b60405180910390f35b5f700100000000000000000000000000000000821061008d57608082901c915060808161008a9190610236565b90505b6801000000000000000082106100b457604082901c91506040816100b19190610236565b90505b64010000000082106100d757602082901c91506020816100d49190610236565b90505b6201000082106100f857601082901c91506010816100f59190610236565b90505b610100821061011857600882901c91506008816101159190610236565b90505b6010821061013757600482901c91506004816101349190610236565b90505b6004821061015657600282901c91506002816101539190610236565b90505b6002821061016e5760018161016b9190610236565b90505b919050565b5f80fd5b5f819050919050565b61018981610177565b8114610193575f80fd5b50565b5f813590506101a481610180565b92915050565b5f602082840312156101bf576101be610173565b5b5f6101cc84828501610196565b91505092915050565b5f60ff82169050919050565b6101ea816101d5565b82525050565b5f6020820190506102035f8301846101e1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610240826101d5565b915061024b836101d5565b9250828201905060ff81111561026457610263610209565b5b9291505056fea2646970667358221220afaf4902a9b04f5ea69c92b266fe93513fda1b28ae7dfabbdcd65b061290d68364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x8D JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xB4 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xD7 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xF8 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x137 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x156 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x16E JUMPI PUSH1 0x1 DUP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP2 EQ PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1BE PUSH2 0x173 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC DUP5 DUP3 DUP6 ADD PUSH2 0x196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x240 DUP3 PUSH2 0x1D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B DUP4 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x264 JUMPI PUSH2 0x263 PUSH2 0x209 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xAF BLOBHASH MUL 0xA9 0xB0 0x4F MCOPY 0xA6 SWAP13 SWAP3 0xB2 PUSH7 0xFE93513FDA1B28 0xAE PUSH30 0xFABBDCD65B061290D68364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "159:709:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:674;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;257:7;283:8;278:1;:13;275:72;;312:3;306:9;;;;;333:3;329:7;;;;;:::i;:::-;;;275:72;364:7;359:1;:12;356:69;;392:2;386:8;;;;;412:2;408:6;;;;;:::i;:::-;;;356:69;442:7;437:1;:12;434:69;;470:2;464:8;;;;;490:2;486:6;;;;;:::i;:::-;;;434:69;520:7;515:1;:12;512:69;;548:2;542:8;;;;;568:2;564:6;;;;;:::i;:::-;;;512:69;598:6;593:1;:11;590:66;;625:1;619:7;;;;;644:1;640:5;;;;;:::i;:::-;;;590:66;673:6;668:1;:11;665:66;;700:1;694:7;;;;;719:1;715:5;;;;;:::i;:::-;;;665:66;748:6;743:1;:11;740:66;;775:1;769:7;;;;;794:1;790:5;;;;;:::i;:::-;;;740:66;823:6;818:1;:11;815:45;;848:1;844:5;;;;;:::i;:::-;;;815:45;192:674;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:86::-;1060:7;1100:4;1093:5;1089:16;1078:27;;1025:86;;;:::o;1117:112::-;1200:22;1216:5;1200:22;:::i;:::-;1195:3;1188:35;1117:112;;:::o;1235:214::-;1324:4;1362:2;1351:9;1347:18;1339:26;;1375:67;1439:1;1428:9;1424:17;1415:6;1375:67;:::i;:::-;1235:214;;;;:::o;1455:180::-;1503:77;1500:1;1493:88;1600:4;1597:1;1590:15;1624:4;1621:1;1614:15;1641:188;1679:3;1698:18;1714:1;1698:18;:::i;:::-;1693:23;;1730:18;1746:1;1730:18;:::i;:::-;1725:23;;1771:1;1768;1764:9;1757:16;;1794:4;1789:3;1786:13;1783:39;;;1802:18;;:::i;:::-;1783:39;1641:188;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "134400",
								"executionCost": "175",
								"totalCost": "134575"
							},
							"external": {
								"findMostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 159,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 868,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afaf4902a9b04f5ea69c92b266fe93513fda1b28ae7dfabbdcd65b061290d68364736f6c634300081a0033",
									".code": [
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "483D868D"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 278,
											"end": 279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 278,
											"end": 291,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 275,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 275,
											"end": 347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 312,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 306,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 315,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 306,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 275,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 359,
											"end": 371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 356,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 386,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 394,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 386,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 437,
											"end": 449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 434,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 434,
											"end": 503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 470,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 486,
											"end": 492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 486,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 486,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 434,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 515,
											"end": 516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 515,
											"end": 527,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 512,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 512,
											"end": 581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 542,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 550,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 542,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 542,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 564,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 564,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 564,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 564,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 512,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 593,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 593,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 590,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 619,
											"end": 626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 619,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 626,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 619,
											"end": 626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 673,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 668,
											"end": 669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 668,
											"end": 679,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 694,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 701,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 694,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 715,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 715,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 743,
											"end": 754,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 775,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 769,
											"end": 776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 769,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 769,
											"end": 776,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 769,
											"end": 776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 790,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 790,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 790,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 790,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 823,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 818,
											"end": 819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 815,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 844,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 815,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 815,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1200,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1375,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1375,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1455,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1698,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1730,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1748,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1789,
											"end": 1792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1783,
											"end": 1822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1802,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1822,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1783,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"5w/MostSignificantBit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"findMostSignificantBit(uint256)": "483d868d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"findMostSignificantBit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"r\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"5w/MostSignificantBit.sol\":\"MostSignificantBit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"5w/MostSignificantBit.sol\":{\"keccak256\":\"0x896de98c47e57d1d6384b26baa075d28cef881c3cf6fab7774ddf5d1b1097d56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f99e01fa01bbe415fbd3a296f8e993ff2736c6aa3eae7099fdaee107369020d\",\"dweb:/ipfs/QmNZT7jTsTYMzWaQhWD5ZTh4riWMmysJy5vVcT6ZcULiaR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"5w/MostSignificantBit.sol": {
				"ast": {
					"absolutePath": "5w/MostSignificantBit.sol",
					"exportedSymbols": {
						"MostSignificantBit": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MostSignificantBit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "MostSignificantBit",
							"nameLocation": "168:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "265:601:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "278:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "283:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "313238",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "283:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														}
													},
													"src": "278:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "IfStatement",
												"src": "275:72:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "292:55:0",
													"statements": [
														{
															"expression": {
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 13,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "312:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "306:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 16,
															"nodeType": "ExpressionStatement",
															"src": "306:9:0"
														},
														{
															"expression": {
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 17,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "333:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "329:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 20,
															"nodeType": "ExpressionStatement",
															"src": "329:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3634",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "369:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														}
													},
													"src": "359:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "356:69:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "372:53:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "386:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "392:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "386:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "386:8:0"
														},
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "408:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "408:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 38,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "437:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3332",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "447:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														}
													},
													"src": "437:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "434:69:0",
												"trueBody": {
													"id": 51,
													"nodeType": "Block",
													"src": "450:53:0",
													"statements": [
														{
															"expression": {
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 43,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "464:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "470:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "464:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "464:8:0"
														},
														{
															"expression": {
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 47,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "490:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "486:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 50,
															"nodeType": "ExpressionStatement",
															"src": "486:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3136",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "525:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														}
													},
													"src": "515:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "512:69:0",
												"trueBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "528:53:0",
													"statements": [
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "542:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "548:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "542:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "542:8:0"
														},
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "568:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "564:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "564:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "593:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "598:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "38",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "603:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														}
													},
													"src": "593:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "590:66:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "605:51:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "619:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "625:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "619:7:0"
														},
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "640:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "644:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "640:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "34",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "678:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														}
													},
													"src": "668:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "665:66:0",
												"trueBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "680:51:0",
													"statements": [
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 88,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "694:7:0"
														},
														{
															"expression": {
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 92,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "715:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "715:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "715:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "748:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "748:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														}
													},
													"src": "743:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "740:66:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "755:51:0",
													"statements": [
														{
															"expression": {
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 103,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "769:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "775:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "769:7:0"
														},
														{
															"expression": {
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 107,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "790:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "790:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "790:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "823:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "31",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "823:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														}
													},
													"src": "818:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "IfStatement",
												"src": "815:45:0",
												"trueBody": {
													"id": 122,
													"nodeType": "Block",
													"src": "830:30:0",
													"statements": [
														{
															"expression": {
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 118,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "844:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "844:5:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "483d868d",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findMostSignificantBit",
									"nameLocation": "201:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "232:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "224:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:11:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "263:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "257:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "257:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:0"
									},
									"scope": 126,
									"src": "192:674:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "159:709:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:836:0"
				},
				"id": 0
			}
		}
	}
}